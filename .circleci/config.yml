version: 2

# https://circleci.com/blog/circleci-hacks-reuse-yaml-in-your-circleci-config-with-yaml/
defaults: &defaults
  docker:
    - image: docker.io/weaveworks/wks-build:master-134af34f
      environment:
        GOPATH: /go/
        SRCDIR: /src/github.com/weaveworks/wks
  working_directory: /src/github.com/weaveworks/wks

checkoutWithSSH: &checkoutWithSSH
  - add_ssh_keys:
      # With the switch go modules we need to pull some private
      # Weaveworks repositories - specifically gokrb5.  We need to use
      # an ssh key configured in Circle and Github.  The deploy key
      # CircleCI adds is specific to a repository and doesn't work
      # for fetching other private repos.
      fingerprints:
        - "cc:e8:46:28:c2:af:5e:30:cc:01:59:ab:9b:ad:45:5c"

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - container-tests: {}
      - unit-tests: {}
      - integration-tests:
          filters:
            branches:
              only:
                - master

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - <<: *checkoutWithSSH
      - setup_remote_docker
      - run:
          name: Build darwin binaries
          command: |
            LOCAL_BINARIES_GOOS=darwin make cmd/wk/wk
            mv cmd/wk/wk cmd/wk/wk-darwin-amd64
      - run: make
      - run: make lint
      - deploy:
          name: Push wk to S3
          command: |
            TAG=${CIRCLE_TAG}
            if [ -z "$TAG" ]; then
              TAG=$(./tools/image-tag)
            fi
            if [ -z "${CI_BRANCH}" -o "${CI_BRANCH}" == "master" ]; then
              # aws gets its credential through the AWS_ACCESS_KEY_ID and
              # AWS_SECRET_ACCESS_KEY environment variables.
              export AWS_ACCESS_KEY_ID=$WKP_S3_AWS_ACCESS_KEY_ID
              export AWS_SECRET_ACCESS_KEY=$WKP_S3_AWS_SECRET_ACCESS_KEY

              # legacy binary name
              aws s3 cp cmd/wk/wk s3://weaveworks-wkp/wk-${TAG}

              # publish linux and darwin binaries
              aws s3 cp cmd/wk/wk s3://weaveworks-wkp/wk-${TAG}-linux-amd64
              aws s3 cp cmd/wk/wk-darwin-amd64 s3://weaveworks-wkp/wk-${TAG}-darwin-amd64
            fi
      - persist_to_workspace:
          root: .
          paths:
          - kubectl
          - cmd/wk/wk
          - cmd/mock-https-authz-server/server
      - run: docker login -u "$DOCKER_IO_USER" -p "$DOCKER_IO_PASSWORD" docker.io
      - run: make push

  unit-tests:
    docker:
      - image: docker.io/weaveworks/wks-build:master-134af34f
        environment:
          GOPATH: /go
          SRCDIR: /src/github.com/weaveworks/wks
          KUBECTL_URL: https://dl.k8s.io/v1.10.5/kubernetes-client-linux-amd64.tar.gz
          KUBECTL_CHECKSUM: da9d557989a0b9671a610f21642052febb8f70c3cf144c98a8a4f7ecab6bafe2
          JK_URL: https://github.com/jkcfg/jk/releases/download/0.3.2/jk-linux-amd64
          JK_CHECKSUM: 84a22074f91d3a4502944a46bcf016fd9989b03e23e72d2bee5b46b31a0ee249
    working_directory: /src/github.com/weaveworks/wks
    steps:
      - checkout
      - <<: *checkoutWithSSH
      - run:
          name: Install kubectl
          command: |
            curl --silent -L $KUBECTL_URL -o kubectl.tar.gz
            echo "$KUBECTL_CHECKSUM kubectl.tar.gz" | sha256sum -c
            tar xvzf kubectl.tar.gz --strip-components=3
            sudo mv kubectl /usr/local/bin

      - run:
          name: Install jk
          command: |
            curl --silent -L $JK_URL -o jk
            echo "$JK_CHECKSUM jk" | sha256sum -c
            chmod a+x jk
            sudo mv jk /usr/local/bin

      - run:
          name: Install git
          command: |
            os=$(for f in $(find /etc -type f -maxdepth 1 \( ! -wholename /etc/os-release ! -wholename /etc/lsb-release -wholename /etc/\*release -o -wholename /etc/\*version \) 2> /dev/null); do echo ${f:5:${#f}-13}; done)
            if [ $os = "centos" ]; then
              sudo yum update -y
              sudo yum install -y git
            else
              sudo apt-get update -y
              sudo apt-get install -y git
            fi
            git config --global user.email "test@wkp.org"
            git config --global user.name "Test Wkp"
      - run:
          name: Run unit tests
          command: |
            go version
            make unit-tests

  container-tests:
    machine:
      docker_layer_caching: true
    environment:
      GOURL: https://dl.google.com/go/go1.12.7.linux-amd64.tar.gz
      GOCHECKSUM: 66d83bfb5a9ede000e33c6579a91a29e6b101829ad41fffb5c5bb6c900e109d9
      GOROOT: /home/circleci/goroot
      GOPATH: /home/circleci/go
      SRCDIR: /home/circleci/src/github.com/weaveworks/wks
    working_directory: /home/circleci/src/github.com/weaveworks/wks
    steps:
      - checkout
      - <<: *checkoutWithSSH
      - run:
          name: Install go
          command: |
            (cd ~ && curl --silent -L $GOURL -o go.tar.gz && echo "$GOCHECKSUM go.tar.gz" | sha256sum -c)
            mkdir -p $GOROOT && tar xf ~/go.tar.gz -C $GOROOT --strip-components 1

      - run:
          name: Run container tests
          command: |
            export PATH=$GOROOT/bin:$PATH
            go version
            make container-tests

  integration-tests:
    machine:
      docker_layer_caching: true
    environment:
      GOURL: https://dl.google.com/go/go1.12.7.linux-amd64.tar.gz
      GOCHECKSUM: 66d83bfb5a9ede000e33c6579a91a29e6b101829ad41fffb5c5bb6c900e109d9
      GOROOT: /home/circleci/goroot
      GOPATH: /home/circleci/go
      SRCDIR: /home/circleci/src/github.com/weaveworks/wks
      KUBECTL_URL: https://dl.k8s.io/v1.10.5/kubernetes-client-linux-amd64.tar.gz
      KUBECTL_CHECKSUM: da9d557989a0b9671a610f21642052febb8f70c3cf144c98a8a4f7ecab6bafe2
    working_directory: /home/circleci/src/github.com/weaveworks/wks
    steps:
      - checkout
      - <<: *checkoutWithSSH
      - run:
          name: Install go
          command: |
            (cd ~ && curl --silent -L $GOURL -o go.tar.gz && echo "$GOCHECKSUM go.tar.gz" | sha256sum -c)
            mkdir -p $GOROOT && tar xf ~/go.tar.gz -C $GOROOT --strip-components 1
      - run:
          name: Install kubectl
          command: |
            curl --silent -L $KUBECTL_URL -o kubectl.tar.gz
            echo "$KUBECTL_CHECKSUM kubectl.tar.gz" | sha256sum -c
            tar xvzf kubectl.tar.gz --strip-components=3
            sudo mv kubectl /usr/local/bin
      - run:
          name: Install hub
          command: |
            curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
            sudo mv bin/hub /usr/local/bin
      - restore_cache:
          keys:
            - go-mod-v2-{{ checksum "go.sum" }}
      - run:
          name: Go get
          command: |
            export PATH=$GOROOT/bin:$PATH
            go get
      - save_cache:
          key: go-mod-v2-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/go/pkg/mod
      # - run:
      #     name: Run container tests
      #     command: |
      #       export PATH=$GOROOT/bin:$PATH
      #       # remove the circle config which locks down github keys
      #       mv ~/.ssh/config{,.old}

      #       ssh-keygen -N "" -q -f gitops-repo-key
      #       eval "$(ssh-agent -s)"
      #       ssh-add -D
      #       ssh-add gitops-repo-key
      #       export GIT_DEPLOY_KEY=$PWD/gitops-repo-key

      #       curl -o wkp.tar.gz https://weaveworks-wkp.s3.amazonaws.com/wk-quickstart-v2.0.0-rc4.tar.gz
      #       export WKP_BUNDLE=$PWD/wkp.tar.gz

      #       export SKIP_COMPONENTS=true
      #       export TRACK=wks-footloose
      #       export UPGRADE_VERSION=1.14.10
      #       export WKP_CLUSTER_COMPONENTS_IMAGE=docker.io/weaveworks/wkp-cluster-components:master-1093c037
      #       export GITHUB_ORG=$WKP_GITHUB_USER

      #       # e.g. wkp-ci-test-bot from 1passwords
      #       export GITHUB_USER=$WKP_GITHUB_USER
      #       export GITHUB_TOKEN=$WKP_GITHUB_TOKEN

      #       cd test/integration/test
      #       go test -v -run TestUpgrade --timeout=99999s
