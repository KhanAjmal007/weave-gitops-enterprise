version: 2

# https://circleci.com/blog/circleci-hacks-reuse-yaml-in-your-circleci-config-with-yaml/
defaults: &defaults
  docker:
    - image: quay.io/wks/build:master-7421a07b
      environment:
        GOPATH: /go/
        SRCDIR: /go/src/github.com/weaveworks/wks
  working_directory: /go/src/github.com/weaveworks/wks

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - container-tests:
          requires:
            - build
      # - integration-tests:
      #     requires:
      #       - build
      - integration-tests-simplified:
          requires:
            - build

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install kubectl
          command: |
            sudo curl -o kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.5/bin/linux/amd64/kubectl
            sudo chmod +x kubectl
            sudo cp kubectl /usr/local/bin

      - run:
          command: |
            make
            make lint
      - run:
          name: Run unit tests
          command: make unit-tests
      - deploy:
          name: Push wksctl to S3
          command: |
            TAG=${CIRCLE_TAG}
            if [ -z "$TAG" ]; then
              TAG=$(./tools/image-tag)
            fi
            if [ -z "${CI_BRANCH}" -o "${CI_BRANCH}" == "master" ]; then
              # aws gets its credential through the AWS_ACCESS_KEY_ID and
              # AWS_SECRET_ACCESS_KEY environment variables.
              aws s3 cp cmd/wksctl/wksctl s3://weaveworks-wks/wksctl-${TAG}
            fi
      - persist_to_workspace:
          root: .
          paths:
          - kubectl
          - cmd/wksctl/wksctl
      - run: docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD" quay.io
      - run: make push

  container-tests:
    machine:
      docker_layer_caching: true
    environment:
      GOVERSION: 1.11.2
      GOPATH: /home/circleci/go
      SRCDIR: /home/circleci/go/src/github.com/weaveworks/wks
    working_directory: /home/circleci/go/src/github.com/weaveworks/wks
    steps:
      - checkout
      - run:
          name: Install go ${GOVERSION}
          command: |
            (cd ~ && curl -O https://dl.google.com/go/go${GOVERSION}.linux-amd64.tar.gz)
            mkdir ~/go-${GOVERSION} && tar xf ~/go${GOVERSION}.linux-amd64.tar.gz -C ~/go-${GOVERSION} --strip-components 1

      - run:
          name: Run container tests
          command: |
            export GOROOT=/home/circleci/go-${GOVERSION}
            export PATH=~/go-${GOVERSION}/bin:$PATH
            make container-tests

  integration-tests:
    machine:
      docker_layer_caching: true
    environment:
      GOVERSION: 1.11.2
      GOPATH: /home/circleci/go
      SRCDIR: /home/circleci/go/src/github.com/weaveworks/wks
    working_directory: /home/circleci/go/src/github.com/weaveworks/wks
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/workspace
      - run: /tmp/workspace/cmd/wksctl/wksctl version
      - run: env

      - run:
          name: Install go ${GOVERSION}
          command: |
            (cd ~ && curl -O https://dl.google.com/go/go${GOVERSION}.linux-amd64.tar.gz)
            mkdir ~/go-${GOVERSION} && tar xf ~/go${GOVERSION}.linux-amd64.tar.gz -C ~/go-${GOVERSION} --strip-components 1

      - run:
          name: Create VMs
          command: docker run --env-file <(env|grep -E 'CIRCLE|SECRET|SRCDIR') -v /root:/root -v /tmp:/tmp -v /home/circleci:/home/circleci --entrypoint=$SRCDIR/test/integration/bin/provision_test_vms.sh quay.io/wks/build:latest
      - run: sudo chown -R circleci:circleci /root # Make the VM SSH keys readable to the circleci user

      - run:
          name: Initialise Kerberos
          command: |
            KERBEROS_IP=$(jq -r '.public_ips.value[0]' /tmp/terraform_output.json)
            sed -e s/KERBEROS_IP/$KERBEROS_IP/g test/integration/krb5.conf.template | sudo tee /etc/krb5.conf
            sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive apt-get install -y krb5-user

      - run:
          name: Install kubectl (from workspace)
          command: |
            sudo cp /tmp/workspace/kubectl /usr/bin/kubectl

      - run:
          name: Run integration tests
          command: |
            docker login -u="$DOCKER_USER" -p="$DOCKER_PASSWORD" quay.io
            export GOROOT=/home/circleci/go-${GOVERSION}
            export PATH=~/go-${GOVERSION}/bin:$PATH
            # Work around for broken docker package in RHEL
            # See https://github.com/weaveworks/wks/issues/235
            export DOCKER_VERSION='1.13.1-75*'
            make integration-test

      - run:
          name: Destroy VMs
          command: docker run --env-file <(env|grep -E 'CIRCLE|SECRET|SRCDIR') -v /root:/root -v /tmp:/tmp -v /home/circleci:/home/circleci --entrypoint=$SRCDIR/test/integration/bin/circle-destroy-vms quay.io/wks/build:latest

  integration-tests-simplified:
    docker:
      - image: quay.io/wks/build:master-7421a07b
        environment:
          GOVERSION: 1.11.2
          GOPATH: /go/
          SRCDIR: /go/src/github.com/weaveworks/wks
    working_directory: /go/src/github.com/weaveworks/wks
    steps:
      - checkout
      - setup_remote_docker

      - attach_workspace:
          at: /tmp/workspace
      - run: /tmp/workspace/cmd/wksctl/wksctl version
      - run: env

      - run:
          name: Create VMs
          command: $SRCDIR/test/integration/bin/up.sh

      - run:
          name: Run integration tests
          command: $SRCDIR/test/integration/bin/test.sh

      - run:
          name: Destroy VMs
          command: $SRCDIR/test/integration/bin/down.sh
