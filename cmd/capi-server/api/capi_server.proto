syntax = "proto3";

package capi_server.v1;

option go_package = "github.com/weaveworks/wks/cmd/capi-server/proto/capi_server";

import "google/api/annotations.proto";

service ClustersService {
  rpc ListTemplates(ListTemplatesRequest) returns (ListTemplatesResponse) {
    option (google.api.http) = {
      get : "/v1/templates"
    };
  }
  rpc ListTemplateParams(ListTemplateParamsRequest)
      returns (ListTemplateParamsResponse) {
    option (google.api.http) = {
      get : "/v1/templates/{template_name}/params"
    };
  }
  rpc RenderTemplate(RenderTemplateRequest)
      returns (RenderTemplateResponse) {
    option (google.api.http) = {
      post : "/v1/templates/{template_name}/render"
      body: "values"
    };
  }
  // Creates a pull request for a cluster template.
  // The template name and values will be used to 
  // create a new branch for which a new pull request
  // will be created.
  rpc CreatePullRequest(CreatePullRequestRequest)
      returns (CreatePullRequestResponse) {
    option (google.api.http) = {
      post: "/v1/pulls"
      body: "*"
    };
  }
}

message ListTemplatesRequest {}
message ListTemplatesResponse {
  repeated Template templates = 1;
  int32 total = 2;
}

message ListTemplateParamsRequest { string template_name = 1; }
message ListTemplateParamsResponse { repeated Parameter parameters = 1; }

message RenderTemplateRequest { 
  string template_name = 1; 
  ParameterValues values = 2;
}
message RenderTemplateResponse { string renderedTemplate = 1; }

message CreatePullRequestRequest {
  // The repository to use.
  string repository_url = 1;
  // The new branch that will be created.
  string head_branch = 2; 
  // The target branch.
  string base_branch = 3;
  // The title of the pull request.
  string title = 4;
  // The description of the pull request
  string description = 5;
  // The name of the template to create a pull request for.
  string template_name = 6; 
  // The values that populate the template's parameters.
  map<string, string> parameter_values = 7;
  // The commit message
  string commit_message = 8;
}
message CreatePullRequestResponse {
  // The url of the new pull request.
  string web_url = 1;
}

message Template {
  string name = 1;
  string description = 2;
  string version = 3;
  repeated Parameter parameters = 4;
  string body = 5;
}

message Parameter {
  string name = 1;
  string description = 2;
}

message ParameterValues {
  map<string, string> values = 1; 
}